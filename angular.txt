Correct
1/1 Points
3.Which of the following decorator is used to pass the data from the parent  component to the child component?

a) @Output()

b) Input

c) @Input()

d) Output
Correct
1/1 Points
4.Which of the following is a structural directive?

a) ngModel

b) ngStyle

c) ngClass

d) ngFor
Correct
1/1 Points
5.Which of the following is used for two way data binding?

a) ngModel

b) ngStyle

c) ngClass

d) ngFor
Correct
1/1 Points
6.Choose the correct answer about Pipes

a) Pipes are used to modify the values in the web page

b) Pipes are used to format the data

c) Pipes are used for modifying the DOM hierarchy

d) Pipes are used to add styles to the web page
Correct
1/1 Points
7.Which directive changes the style and behavior of the web page?

a) Structural Directive

b) Attribute Directive
Incorrect
0/1 Points
8.Identify the decorator that will be added above the service?

a) @Service

b) @Component

c) @Injectable

d) @Injector
Incorrect
0/1 Points
9.Which of the following is the correct syntax to assign name to a HTML element using template reference variable?

a) <input type=”text” #username>

b) <input type=”text” name = “#username”>

c) <input type=”text” ngModel=”#username”>

d) <input type=”text” $username>
Correct
1/1 Points
10.The tag that is used to render the matched component via active route is

a) <output></output>

b) <router-outlet></router-outlet>

c) <router-link></router-link>

d) <router-active></router-active>
Correct
1/1 Points
11.Which class can be used to extract route parameters inside component/ to get the details about the currently activated route?

a) Router

b) ActivatedRoute

c) Route

d) RouterModule
Correct
1/1 Points
12.Which class can be used to navigate from one page to another page in a component?

a) Router

b) ActivatedRoute

c) Route

d) RouterModule
Correct
1/1 Points
13.Which decorator does the directive use to listen to the host/target events?

a) @Listener

b) @TargetListener

c) @HostListener

d) @EventListener
Incorrect
0/1 Points
14.Identify the correct syntax for event binding

a) <button [(click)]=”show()”>Show</button>

b) <button ([click])=”show()”>Show</button>

c) <button [click]=”show()”>Show</button>

d) <button (click)=”show()”>Show</button>
Correct
1/1 Points
15.Which of the following syntax is used for property binding?

a) <button [disabled]=”buttonStatus”>Click</button>

b) <button (disabled)=”buttonStatus”>Click</button>

c) <button [(disabled)]=”buttonStatus”>Click</button>

d) <button [disabled]=”{{buttonStatus}}”>Click</button>
Correct
1/1 Points
16.Which of the following will have the details about the external dependencies about the angular application?

a) angular.json

b) package.json

c) tsconfig.json

d) tsconfig.app.json
Correct
1/1 Points
17.Which of the following is an example of twoway data binding?

a) <input type=”text” #username>{{username}}

b) <input type=”text” name=”username”>{{username}}

c) <input type=”text” [(ngModel)] = “username”>{{username}}

d) <input type=”text” ([ngModel]) = “#username”>{{username}}
Incorrect
0/1 Points
18.In which metadata of @NgModule the components should should be added

a) providers

b) imports

c) bootstrap

d) Declarations
Correct
1/1 Points
19.The entry point to an angular application is 

a) main.ts

b) index.ts

c) app.component.ts

d) app.module.ts
Incorrect
0/1 Points
20.Which of the following Angular CSS class is used if the value is not modified by the user?

a) ng-pristine

b) ng-untouched

c) ng-touched

d) ng-dirty
Correct
1/1 Points
21.In which type of encapsulation, the css applied to the current component will bleed to the other components ?

a) ViewEncapsulation.ShadowDOM

b) ViewEncapsulation.Parent

c) ViewEncapsulation.Emulated

d) ViewEncapsulation.None
Correct
1/1 Points
22.Which of the following is used to pass data from the child component to parent component?

a) @ViewChild()

b) @Child()

c) @Input()

d) Output